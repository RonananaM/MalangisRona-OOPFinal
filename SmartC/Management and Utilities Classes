# CityEntity class as a base class for all city-related entities
class CityEntity:
    def __init__(self, name, location):
        self.name = name
        self.location = location  # Location as a tuple (latitude, longitude)

    def render(self):
        raise NotImplementedError("Subclasses must implement this method.")


# TransportMode class as a base class for different transport modes
class TransportMode:
    def __init__(self, name, capacity):
        self.name = name
        self.capacity = capacity  # Number of passengers

    def calculate_route(self, start, end):
        raise NotImplementedError("Subclasses must implement this method.")


# CityPlanner class to manage entities and transport modes in the city
class CityPlanner:
    def __init__(self):
        self.entities = []  # List of CityEntity objects
        self.transport_modes = []  # List of TransportMode objects

    def add_entity(self, entity):
        """Adds a city entity (e.g., building, park, road) to the planner."""
        self.entities.append(entity)

    def add_transport_mode(self, mode):
        """Adds a transport mode (e.g., bus, bike) to the planner."""
        self.transport_modes.append(mode)

    def render_all_entities(self):
        """Renders all entities in the city (calls render on each)."""
        for entity in self.entities:
            print(entity.render())

    def calculate_transport_routes(self, start, end):
        """Calculates routes for all transport modes from start to end."""
        for mode in self.transport_modes:
            print(mode.calculate_route(start, end))


# SimulationEngine class to simulate various aspects of the city's dynamics
class SimulationEngine:
    def __init__(self, planner):
        self.planner = planner  # CityPlanner instance

    def simulate_traffic(self):
        """Simulates traffic flow across roads."""
        print("Simulating traffic flow across roads.")

    def simulate_population_growth(self):
        """Simulates population growth and housing demand."""
        print("Simulating population growth and housing demand.")
